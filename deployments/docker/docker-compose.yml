version: '3.8'

services:
  # ReskPoints API service
  reskpoints-api:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql://reskpoints:password@postgres:5432/reskpoints
      - TIMESCALE_URL=postgresql://reskpoints:password@timescaledb:5432/reskpoints_metrics
      - CLICKHOUSE_URL=http://clickhouse:8123
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - timescaledb
      - clickhouse
      - redis
    volumes:
      - ../../:/app
    networks:
      - reskpoints-network

  # PostgreSQL for general data
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=reskpoints
      - POSTGRES_USER=reskpoints
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - reskpoints-network

  # TimescaleDB for metrics storage
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_DB=reskpoints_metrics
      - POSTGRES_USER=reskpoints
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - reskpoints-network

  # ClickHouse for analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=reskpoints_analytics
      - CLICKHOUSE_USER=reskpoints
      - CLICKHOUSE_PASSWORD=password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - reskpoints-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reskpoints-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - reskpoints-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - reskpoints-network

volumes:
  postgres_data:
  timescale_data:
  clickhouse_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  reskpoints-network:
    driver: bridge